{"ast":null,"code":"var _jsxFileName = \"/Users/autodidacticai/Code/eth-mentorship/fullstack-ethdev/packages/react-app/src/App.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, List } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Balance, Address } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport { Hints, ExampleUI, Subgraph } from \"./views\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\n\nconst humanizeDuration = require(\"humanize-duration\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üì° EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true; // üõ∞ providers\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n\nconst mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID); // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID)\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer;\n\nfunction App(props) {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n  if (DEBUG) console.log(\"üë©‚Äçüíº selected address:\", address); // You can warn the user if you would like them to be on a specific network\n\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  if (DEBUG) console.log(\"üè† localChainId\", localChainId);\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId;\n  if (DEBUG) console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId); // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userProvider, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address);\n  if (DEBUG) console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\"); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if (DEBUG) console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\"); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider);\n  if (DEBUG) console.log(\"üìù readContracts\", readContracts); // If you want to make üîê write transactions to your contracts, use the userProvider:\n\n  const writeContracts = useContractLoader(userProvider);\n  if (DEBUG) console.log(\"üîê writeContracts\", writeContracts); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  //const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  //console.log(\"ü•áDAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  //const myMainnetBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  //\n  //keep track of contract balance to know how much has been staked total:\n\n  const stakerContractBalance = useBalance(localProvider, readContracts && readContracts.Staker.address);\n  if (DEBUG) console.log(\"üíµ stakerContractBalance\", stakerContractBalance); //keep track of total 'threshold' needed of ETH\n\n  const threshold = useContractReader(readContracts, \"Staker\", \"threshold\");\n  console.log(\"üíµ threshold:\", threshold); // keep track of a variable from the contract in the local React state:\n\n  const balanceStaked = useContractReader(readContracts, \"Staker\", \"balances\", [address]);\n  console.log(\"üí∏ balanceStaked:\", balanceStaked); //üìü Listen for broadcast events\n\n  const stakeEvents = useEventListener(readContracts, \"Staker\", \"Stake\", localProvider, 1);\n  console.log(\"üìü stake events:\", stakeEvents); // keep track of a variable from the contract in the local React state:\n\n  const timeLeft = useContractReader(readContracts, \"Staker\", \"timeLeft\");\n  console.log(\"‚è≥ timeLeft:\", timeLeft);\n  const complete = useContractReader(readContracts, \"ExampleExternalContract\", \"completed\");\n  console.log(\"‚úÖ complete:\", complete);\n  const exampleExternalContractBalance = useBalance(localProvider, readContracts && readContracts.ExampleExternalContract.address);\n  if (DEBUG) console.log(\"üíµ exampleExternalContractBalance\", exampleExternalContractBalance);\n  let completeDisplay = \"\";\n\n  if (complete) {\n    completeDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 64,\n        backgroundColor: \"#eeffef\",\n        fontWeight: \"bolder\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, \"\\uD83D\\uDE80 \\uD83C\\uDF96 \\uD83D\\uDC69\\u200D\\uD83D\\uDE80  -  Staking App triggered `ExampleExternalContract` -- \\uD83C\\uDF89  \\uD83C\\uDF7E   \\uD83C\\uDF8A\", /*#__PURE__*/React.createElement(Balance, {\n      balance: exampleExternalContractBalance,\n      fontSize: 64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }), \" ETH staked!\");\n  }\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n\n  let networkDisplay = \"\";\n\n  if (localChainId && selectedChainId && localChainId != selectedChainId) {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: 2,\n        position: 'absolute',\n        right: 0,\n        top: 60,\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      message: \"‚ö†Ô∏è Wrong Network\",\n      description: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 24\n        }\n      }, NETWORK(selectedChainId).name), \" selected and you need to be on \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 94\n        }\n      }, NETWORK(localChainId).name), \".\"),\n      type: \"error\",\n      closable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: 2,\n        position: 'absolute',\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, targetNetwork.name);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId == 31337 && yourLocalBalance && formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => {\n        faucetTx({\n          to: address,\n          value: parseEther(\"0.01\")\n        });\n        setFaucetClicked(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), networkDisplay, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/\");\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"Staker UI\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/contracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/contracts\");\n    },\n    to: \"/contracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"Debug Contracts\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, completeDisplay, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 8,\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"Timeleft:\"), timeLeft && humanizeDuration(timeLeft.toNumber() * 1000)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Total staked:\"), /*#__PURE__*/React.createElement(Balance, {\n    balance: stakerContractBalance,\n    fontSize: 64,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }), \"/\", /*#__PURE__*/React.createElement(Balance, {\n    balance: threshold,\n    fontSize: 64,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, \"You staked:\"), /*#__PURE__*/React.createElement(Balance, {\n    balance: balanceStaked,\n    fontSize: 64,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: () => {\n      tx(writeContracts.Staker.execute());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDCE1  Execute!\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: () => {\n      tx(writeContracts.Staker.withdraw(address));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, \"\\uD83C\\uDFE7  Withdraw\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: balanceStaked ? \"success\" : \"primary\",\n    onClick: () => {\n      tx(writeContracts.Staker.stake({\n        value: parseEther(\"0.5\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDD69  Stake 0.5 ether!\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 500,\n      margin: \"auto\",\n      marginTop: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, \"Stake Events:\"), /*#__PURE__*/React.createElement(List, {\n    dataSource: stakeEvents,\n    renderItem: item => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: item[0] + item[1] + item.blockNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Address, {\n        value: item[0],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 23\n        }\n      }), \" =>\", /*#__PURE__*/React.createElement(Balance, {\n        balance: item[1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/contracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Contract, {\n    name: \"Staker\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Contract, {\n    name: \"ExampleExternalContract\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 10\n    }\n  }), faucetHint), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 32,\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, \"Created by \", /*#__PURE__*/React.createElement(Address, {\n    value: \"Your...address\",\n    ensProvider: mainnetProvider,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 32,\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    style: {\n      padding: 32,\n      color: \"#000\"\n    },\n    href: \"https://github.com/austintgriffith/scaffold-eth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 47\n    }\n  }, \"\\uD83C\\uDF74 Fork me!\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    networks: NETWORKS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 16\n    }\n  }, \"\\uD83D\\uDCAC\"), \"Support\"))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 12\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname) >= 0 && !process.env.REACT_APP_PROVIDER && price > 1 ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 18\n    }\n  }) : \"\"))));\n}\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nwindow.ethereum && window.ethereum.on('chainChanged', chainId => {\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n});\nexport default App;","map":{"version":3,"sources":["/Users/autodidacticai/Code/eth-mentorship/fullstack-ethdev/packages/react-app/src/App.jsx"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Switch","Route","Link","JsonRpcProvider","Web3Provider","Row","Col","Button","Menu","Alert","List","Web3Modal","WalletConnectProvider","useUserAddress","useExchangePrice","useGasPrice","useUserProvider","useContractLoader","useContractReader","useEventListener","useBalance","useExternalContractLoader","Header","Account","Faucet","Ramp","Contract","GasGauge","Balance","Address","Transactor","formatEther","parseEther","Hints","ExampleUI","Subgraph","INFURA_ID","DAI_ADDRESS","DAI_ABI","NETWORK","NETWORKS","humanizeDuration","require","targetNetwork","DEBUG","console","log","mainnetProvider","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","App","props","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","localChainId","_network","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","stakerContractBalance","Staker","threshold","balanceStaked","stakeEvents","timeLeft","complete","exampleExternalContractBalance","ExampleExternalContract","completeDisplay","padding","backgroundColor","fontWeight","networkDisplay","zIndex","position","right","top","name","color","loadWeb3Modal","provider","web3Modal","connect","cachedProvider","route","setRoute","window","location","pathname","faucetHint","faucetClicked","setFaucetClicked","to","value","textAlign","marginTop","toNumber","execute","withdraw","stake","width","margin","item","blockNumber","getSigner","logoutOfWeb3Modal","opacity","left","bottom","open","marginRight","connection","url","indexOf","hostname","cacheProvider","providerOptions","walletconnect","package","options","infuraId","clearCachedProvider","setTimeout","reload","ethereum","on"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport {  JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, List } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Balance, Address } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport { Hints, ExampleUI, Subgraph } from \"./views\"\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\nconst humanizeDuration = require(\"humanize-duration\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üì° EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true\n\n// üõ∞ providers\nif(DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\nconst mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID)\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif(DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n\nfunction App(props) {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangePrice(targetNetwork,mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork,\"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n  if(DEBUG) console.log(\"üë©‚Äçüíº selected address:\",address)\n\n  // You can warn the user if you would like them to be on a specific network\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId\n  if(DEBUG) console.log(\"üè† localChainId\",localChainId)\n\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId\n  if(DEBUG) console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId)\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice)\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice)\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  if(DEBUG) console.log(\"üíµ yourLocalBalance\",yourLocalBalance?formatEther(yourLocalBalance):\"...\")\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if(DEBUG) console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?formatEther(yourMainnetBalance):\"...\")\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider)\n  if(DEBUG) console.log(\"üìù readContracts\",readContracts)\n\n  // If you want to make üîê write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider)\n  if(DEBUG) console.log(\"üîê writeContracts\",writeContracts)\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  //const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  //console.log(\"ü•áDAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  //const myMainnetBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  //\n\n  //keep track of contract balance to know how much has been staked total:\n  const stakerContractBalance = useBalance(localProvider, readContracts && readContracts.Staker.address);\n  if(DEBUG) console.log(\"üíµ stakerContractBalance\", stakerContractBalance )\n\n  //keep track of total 'threshold' needed of ETH\n  const threshold = useContractReader(readContracts,\"Staker\", \"threshold\" )\n  console.log(\"üíµ threshold:\",threshold)\n\n  // keep track of a variable from the contract in the local React state:\n  const balanceStaked = useContractReader(readContracts,\"Staker\", \"balances\",[ address ])\n  console.log(\"üí∏ balanceStaked:\",balanceStaked)\n\n  //üìü Listen for broadcast events\n  const stakeEvents = useEventListener(readContracts, \"Staker\", \"Stake\", localProvider, 1);\n  console.log(\"üìü stake events:\",stakeEvents)\n\n  // keep track of a variable from the contract in the local React state:\n  const timeLeft = useContractReader(readContracts,\"Staker\", \"timeLeft\")\n  console.log(\"‚è≥ timeLeft:\",timeLeft)\n\n\n\n  const complete = useContractReader(readContracts,\"ExampleExternalContract\", \"completed\")\n  console.log(\"‚úÖ complete:\",complete)\n\n  const exampleExternalContractBalance = useBalance(localProvider, readContracts && readContracts.ExampleExternalContract.address);\n  if(DEBUG) console.log(\"üíµ exampleExternalContractBalance\", exampleExternalContractBalance )\n\n\n  let completeDisplay = \"\"\n  if(complete){\n    completeDisplay = (\n      <div style={{padding:64, backgroundColor:\"#eeffef\", fontWeight:\"bolder\"}}>\n        üöÄ üéñ üë©‚ÄçüöÄ  -  Staking App triggered `ExampleExternalContract` -- üéâ  üçæ   üéä\n        <Balance\n          balance={exampleExternalContractBalance}\n          fontSize={64}\n        /> ETH staked!\n      </div>\n    )\n  }\n\n\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  let networkDisplay = \"\"\n  if(localChainId && selectedChainId && localChainId != selectedChainId ){\n    networkDisplay = (\n      <div style={{zIndex:2, position:'absolute', right:0,top:60,padding:16}}>\n        <Alert\n          message={\"‚ö†Ô∏è Wrong Network\"}\n          description={(\n            <div>\n              You have <b>{NETWORK(selectedChainId).name}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n            </div>\n          )}\n          type=\"error\"\n          closable={false}\n        />\n      </div>\n    )\n  }else{\n    networkDisplay = (\n      <div style={{zIndex:2, position:'absolute', right:154,top:28,padding:16,color:targetNetwork.color}}>\n        {targetNetwork.name}\n      </div>\n    )\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname)\n  }, [setRoute]);\n\n  let faucetHint = \"\"\n  const [ faucetClicked, setFaucetClicked ] = useState( false );\n    if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId==31337&&yourLocalBalance&&formatEther(yourLocalBalance)<=0){\n    faucetHint = (\n      <div style={{padding:16}}>\n        <Button type={\"primary\"} onClick={()=>{\n          faucetTx({\n            to: address,\n            value: parseEther(\"0.01\"),\n          });\n          setFaucetClicked(true)\n        }}>\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    )\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n\n        <Menu style={{ textAlign:\"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">Staker UI</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/contracts\">\n            <Link onClick={()=>{setRoute(\"/contracts\")}} to=\"/contracts\">Debug Contracts</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n\n          {completeDisplay}\n\n          <div style={{padding:8,marginTop:32}}>\n            <div>Timeleft:</div>\n            {timeLeft && humanizeDuration(timeLeft.toNumber()*1000)}\n          </div>\n\n          <div style={{padding:8}}>\n            <div>Total staked:</div>\n            <Balance\n              balance={stakerContractBalance}\n              fontSize={64}\n            />/<Balance\n              balance={threshold}\n              fontSize={64}\n            />\n          </div>\n\n\n          <div style={{padding:8}}>\n            <div>You staked:</div>\n            <Balance\n              balance={balanceStaked}\n              fontSize={64}\n            />\n          </div>\n\n\n          <div style={{padding:8}}>\n            <Button type={\"default\"} onClick={()=>{\n              tx( writeContracts.Staker.execute() )\n            }}>üì°  Execute!</Button>\n          </div>\n\n          <div style={{padding:8}}>\n            <Button type={\"default\"} onClick={()=>{\n              tx( writeContracts.Staker.withdraw( address ) )\n            }}>üèß  Withdraw</Button>\n          </div>\n\n          <div style={{padding:8}}>\n            <Button type={ balanceStaked ? \"success\" : \"primary\"} onClick={()=>{\n              tx( writeContracts.Staker.stake({value: parseEther(\"0.5\")}) )\n            }}>ü•©  Stake 0.5 ether!</Button>\n          </div>\n\n\n\n            {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <div style={{width:500, margin:\"auto\",marginTop:64}}>\n              <div>Stake Events:</div>\n              <List\n                dataSource={stakeEvents}\n                renderItem={(item) => {\n                  return (\n                    <List.Item key={item[0]+item[1]+item.blockNumber}>\n                      <Address\n                          value={item[0]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                        /> =>\n                        <Balance\n                          balance={item[1]}\n\n                        />\n\n                    </List.Item>\n                  )\n                }}\n              />\n            </div>\n\n\n\n\n            { /* uncomment for a second contract:\n            <Contract\n              name=\"SecondContract\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            */ }\n\n            { /* Uncomment to display and interact with an external contract (DAI on mainnet):\n            <Contract\n              name=\"DAI\"\n              customContract={mainnetDAIContract}\n              signer={userProvider.getSigner()}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            */ }\n          </Route>\n          <Route path=\"/contracts\">\n            <Contract\n              name=\"Staker\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            <Contract\n              name=\"ExampleExternalContract\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n         <Account\n           address={address}\n           localProvider={localProvider}\n           userProvider={userProvider}\n           mainnetProvider={mainnetProvider}\n           price={price}\n           web3Modal={web3Modal}\n           loadWeb3Modal={loadWeb3Modal}\n           logoutOfWeb3Modal={logoutOfWeb3Modal}\n           blockExplorer={blockExplorer}\n         />\n         {faucetHint}\n      </div>\n\n      <div style={{marginTop:32,opacity:0.5}}>Created by <Address\n        value={\"Your...address\"}\n        ensProvider={mainnetProvider}\n        fontSize={16}\n      /></div>\n\n      <div style={{marginTop:32,opacity:0.5}}><a target=\"_blank\" style={{padding:32,color:\"#000\"}} href=\"https://github.com/austintgriffith/scaffold-eth\">üç¥ Fork me!</a></div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n       <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={8}>\n             <Ramp price={price} address={address} networks={NETWORKS}/>\n           </Col>\n\n           <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n             <GasGauge gasPrice={gasPrice} />\n           </Col>\n           <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n             <Button\n               onClick={() => {\n                 window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n               }}\n               size=\"large\"\n               shape=\"round\"\n             >\n               <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                 üí¨\n               </span>\n               Support\n             </Button>\n           </Col>\n         </Row>\n\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={24}>\n             {\n\n               /*  if the local provider has a signer, let's show the faucet:  */\n               localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname)>=0 && !process.env.REACT_APP_PROVIDER && price > 1 ? (\n                 <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider}/>\n               ) : (\n                 \"\"\n               )\n             }\n           </Col>\n         </Row>\n       </div>\n\n    </div>\n  );\n}\n\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\n window.ethereum && window.ethereum.on('chainChanged', chainId => {\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n})\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}